{"version":3,"file":"static/js/80.6a3caf31.chunk.js","mappings":"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","sources":["contents/products/Products1.tsx","contents/products/Products2.tsx","contents/products/Products3.tsx","contents/products/Products3Memo.tsx","contents/products/Products4.tsx","contents/products/Products5.tsx","contents/products/Products6.tsx","contents/products/Products7.tsx","contents/products/Products8.tsx","pages/ProductsPage.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface DataProps {\n    id: number;\n    title: string;\n    amount: number;\n}\n\nconst Data: DataProps[] = [\n    { id: 1, title: \"title\", amount: 1 },\n    { id: 2, title: \"title\", amount: 2 },\n    { id: 3, title: \"title\", amount: 3 },\n];\n\nexport default function App() {\n    const [modalData, setModalData] = useState<DataProps | null>(null);\n    const [isVisible, setIsVisible] = useState<boolean>(false);\n\n    const handleItemClick = (\n        data: DataProps,\n        onAmountChange: (newAmount: number) => void\n    ) => {\n        setModalData(data);\n        setIsVisible(true);\n    };\n\n    const handleModalClose = (newAmount: number) => {\n        if (modalData) {\n            const updatedData = Data.map((item) => {\n                if (item.id === modalData.id) {\n                    return { ...item, amount: newAmount };\n                }\n                return item;\n            });\n            Data.splice(0, Data.length, ...updatedData);\n        }\n        setIsVisible(false);\n    };\n\n    return (\n        <section className=\"products\">\n            <Parent data={Data} onItemClicked={handleItemClick} />\n            {isVisible && modalData && (\n                <Modal data={modalData} onClose={handleModalClose} />\n            )}\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClicked: (\n        data: DataProps,\n        onAmountChange: (newAmount: number) => void\n    ) => void;\n}\n\nfunction Parent({ data, onItemClicked }: ParentProps) {\n    return (\n        <List>\n            {data.map((item, index) => (\n                <Item key={index} data={item} onItemClicked={onItemClicked} />\n            ))}\n        </List>\n    );\n}\n\ninterface ListProps {\n    children: React.ReactNode;\n}\n\nfunction List({ children }: ListProps) {\n    return <ul>{children}</ul>;\n}\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClicked: (\n        data: DataProps,\n        onAmountChange: (newAmount: number) => void\n    ) => void;\n}\n\nfunction Item({ data, onItemClicked }: ItemProps) {\n    const [currentAmount, setCurrentAmount] = useState<number>(data.amount);\n\n    const handleClick = () => {\n        onItemClicked(data, setCurrentAmount);\n    };\n\n    return (\n        <li>\n            <p>\n                [{data.id}] {data.title}: {currentAmount}\n            </p>\n            <input\n                type=\"number\"\n                value={currentAmount}\n                min=\"0\"\n                onChange={(e) => setCurrentAmount(Number(e.target.value))}\n            />\n            <button onClick={handleClick}>button</button>\n        </li>\n    );\n}\n\ninterface ModalProps {\n    data: DataProps;\n    onClose: (newAmount: number) => void;\n}\n\nfunction Modal({ data, onClose }: ModalProps) {\n    const [newAmount, setNewAmount] = useState<number>(data.amount);\n\n    const handleClose = () => {\n        onClose(newAmount);\n    };\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-container\">\n                <h3>Modal</h3>\n                <h4>id: {data.id}</h4>\n                <h4>title: {data.title}</h4>\n                <p>amount: {newAmount}</p>\n                <input\n                    type=\"number\"\n                    value={newAmount}\n                    onChange={(e) => setNewAmount(Number(e.target.value))}\n                />\n                <button onClick={handleClose}>close</button>\n            </div>\n        </div>\n    );\n}\n","import React, {\n    memo,\n    useCallback,\n    //  useEffect,\n    useState,\n} from \"react\";\n\ninterface DataProps {\n    id: string;\n    title: string;\n    amount: number;\n}\n\nconst Data: DataProps[] = [\n    { id: \"1\", title: \"title\", amount: 1 },\n    { id: \"2\", title: \"title\", amount: 2 },\n    { id: \"3\", title: \"title\", amount: 3 },\n];\n\ninterface OpenModalProps {\n    id: string;\n    title: string;\n    amount: number;\n    onAmountChange: (newAmount: number) => void;\n}\n\nexport default function App() {\n    console.log(\"App\");\n\n    const [modalProps, setModalProps] = useState<OpenModalProps | null>(null);\n\n    const handleItemClick = useCallback((props: OpenModalProps) => {\n        setModalProps(props);\n    }, []);\n\n    const closeModal = useCallback(() => {\n        setModalProps(null);\n    }, []);\n\n    // useEffect(() => {\n    //     console.log(\"handleItemClick 변경되었습니다.\");\n    // }, [handleItemClick]);\n\n    return (\n        <section className=\"products\">\n            <Parent data={Data} onItemClicked={handleItemClick} />\n            {modalProps && <Modal {...modalProps} onClose={closeModal} />}\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nconst Parent = memo(\n    ({ data, onItemClicked }: ParentProps) => {\n        console.log(\"Parent\");\n\n        return (\n            <ul>\n                {data.map((item, index) => (\n                    <Item\n                        key={index}\n                        data={item}\n                        onItemClicked={onItemClicked}\n                    />\n                ))}\n            </ul>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nconst Item = memo(\n    ({ data, onItemClicked }: ItemProps) => {\n        console.log(\"Item\", data.id);\n\n        const { id, title, amount } = data;\n        const [currentAmount, setCurrentAmount] = useState<number>(amount);\n\n        const handleClick = () => {\n            onItemClicked({\n                id,\n                title,\n                amount: currentAmount,\n                onAmountChange: setCurrentAmount,\n            });\n        };\n\n        return (\n            <li>\n                <p>\n                    [{id}] {title}, amount: {currentAmount}\n                </p>\n                <input\n                    type=\"number\"\n                    value={currentAmount}\n                    min=\"0\"\n                    onChange={(e) => setCurrentAmount(Number(e.target.value))}\n                />\n                <button onClick={handleClick}>button</button>\n            </li>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ModalProps extends OpenModalProps {\n    onClose: () => void;\n}\n\nfunction Modal({ id, title, amount, onAmountChange, onClose }: ModalProps) {\n    console.log(\"Modal\");\n\n    const [modalAmount, setModalAmount] = useState(amount);\n\n    const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setModalAmount(Number(e.target.value));\n    };\n\n    const handleClose = () => {\n        onAmountChange(modalAmount);\n        onClose();\n    };\n\n    // useEffect(() => {\n    //     console.log(\"handleAmountChange 변경\");\n    // }, [handleAmountChange]);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-container\">\n                <h3>Modal</h3>\n                <h4>id: {id}</h4>\n                <h4>title: {title}</h4>\n                <p>amount: {modalAmount}</p>\n                <input\n                    type=\"number\"\n                    value={modalAmount}\n                    onChange={handleAmountChange}\n                />\n                <button onClick={handleClose}>close</button>\n            </div>\n        </div>\n    );\n}\n","// forwardRef Modal\n\nimport React, {\n    ChangeEvent,\n    useState,\n    useRef,\n    forwardRef,\n    useImperativeHandle,\n} from \"react\";\n\ninterface DataProps {\n    id: string;\n    title: string;\n    amount: number;\n}\n\nconst Data: DataProps[] = [\n    { id: \"1\", title: \"title\", amount: 1 },\n    { id: \"2\", title: \"title\", amount: 2 },\n    { id: \"3\", title: \"title\", amount: 3 },\n];\n\ninterface OpenModalProps {\n    id: string;\n    title: string;\n    amount: number;\n    onAmountChange: (newAmount: number) => void;\n}\n\ninterface ModalHandles {\n    openModal: (props: OpenModalProps) => void;\n}\n\nexport default function App() {\n    console.log(\"App\");\n    const modalRef = useRef<ModalHandles | null>(null);\n\n    const handleItemClick = (props: OpenModalProps) => {\n        modalRef.current?.openModal(props);\n    };\n\n    return (\n        <section className=\"products\">\n            <Parent data={Data} onItemClicked={handleItemClick} />\n            <Modal ref={modalRef} />\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nfunction Parent({ data, onItemClicked }: ParentProps) {\n    console.log(\"Parent\");\n    return (\n        <ul>\n            {data.map((item, index) => (\n                <Item key={index} data={item} onItemClicked={onItemClicked} />\n            ))}\n        </ul>\n    );\n}\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nfunction Item({ data, onItemClicked }: ItemProps) {\n    console.log(\"Item\", data.id);\n\n    const { id, title } = data;\n    const [currentAmount, setCurrentAmount] = useState<number>(data.amount);\n\n    const handleClick = () => {\n        onItemClicked({\n            id,\n            title,\n            amount: currentAmount,\n            onAmountChange: setCurrentAmount,\n        });\n    };\n\n    return (\n        <li>\n            <p>\n                [{id}] {title}: {currentAmount}\n            </p>\n            <input\n                type=\"number\"\n                value={currentAmount}\n                min=\"0\"\n                onChange={(e) => setCurrentAmount(Number(e.target.value))}\n            />\n            <button onClick={handleClick}>button</button>\n        </li>\n    );\n}\n\nconst Modal = forwardRef<ModalHandles, {}>((props, ref) => {\n    console.log(\"Modal\");\n\n    const [isVisible, setIsVisible] = useState<boolean>(false);\n    const [id, setId] = useState<string | null>(null);\n    const [currentAmount, setCurrentAmount] = useState<number>(0);\n    const [title, setTitle] = useState<string>(\"\");\n    const [onAmountChange, setOnAmountChange] = useState<\n        ((newAmount: number) => void) | null\n    >(null);\n\n    useImperativeHandle(ref, () => ({\n        openModal: ({ id, title, amount, onAmountChange }) => {\n            setId(id);\n            setTitle(title);\n            setCurrentAmount(amount);\n            setOnAmountChange(() => onAmountChange);\n            setIsVisible(true);\n        },\n    }));\n\n    const handleAmountChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setCurrentAmount(Number(e.target.value));\n    };\n\n    const handleClose = () => {\n        if (onAmountChange) {\n            onAmountChange(currentAmount);\n        }\n        setIsVisible(false);\n    };\n\n    if (!isVisible) return null;\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-container\">\n                <h3>Modal</h3>\n                <h4>id: {id}</h4>\n                <h4>title: {title}</h4>\n                <p>amount: {currentAmount}</p>\n                <input\n                    type=\"number\"\n                    value={currentAmount}\n                    onChange={handleAmountChange}\n                />\n                <button onClick={handleClose}>close</button>\n            </div>\n        </div>\n    );\n});\n","// forwardRef Modal\n\nimport React, {\n    ChangeEvent,\n    useState,\n    useRef,\n    forwardRef,\n    useImperativeHandle,\n    useCallback,\n} from \"react\";\n\ninterface DataProps {\n    id: string;\n    title: string;\n    amount: number;\n}\n\nconst Data: DataProps[] = [\n    { id: \"1\", title: \"title\", amount: 1 },\n    { id: \"2\", title: \"title\", amount: 2 },\n    { id: \"3\", title: \"title\", amount: 3 },\n];\n\ninterface OpenModalProps {\n    id: string;\n    title: string;\n    amount: number;\n    onAmountChange: (newAmount: number) => void;\n}\n\ninterface ModalHandles {\n    openModal: (props: OpenModalProps) => void;\n}\n\nexport default function App() {\n    console.log(\"App\");\n    const modalRef = useRef<ModalHandles | null>(null);\n\n    const handleItemClick = useCallback((props: OpenModalProps) => {\n        modalRef.current?.openModal(props);\n    }, []);\n\n    return (\n        <section className=\"products\">\n            <Parent data={Data} onItemClicked={handleItemClick} />\n            <Modal ref={modalRef} />\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nfunction Parent({ data, onItemClicked }: ParentProps) {\n    console.log(\"Parent\");\n    return (\n        <ul>\n            {data.map((item, index) => (\n                <Item key={index} data={item} onItemClicked={onItemClicked} />\n            ))}\n        </ul>\n    );\n}\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nfunction Item({ data, onItemClicked }: ItemProps) {\n    console.log(\"Item\", data.id);\n\n    const { id, title } = data;\n    const [currentAmount, setCurrentAmount] = useState<number>(data.amount);\n\n    const handleClick = () => {\n        onItemClicked({\n            id,\n            title,\n            amount: currentAmount,\n            onAmountChange: setCurrentAmount,\n        });\n    };\n\n    return (\n        <li>\n            <p>\n                [{id}] {title}: {currentAmount}\n            </p>\n            <input\n                type=\"number\"\n                value={currentAmount}\n                min=\"0\"\n                onChange={(e) => setCurrentAmount(Number(e.target.value))}\n            />\n            <button onClick={handleClick}>button</button>\n        </li>\n    );\n}\n\nconst Modal = forwardRef<ModalHandles, {}>((props, ref) => {\n    console.log(\"Modal\");\n\n    const [isVisible, setIsVisible] = useState<boolean>(false);\n    const [id, setId] = useState<string | null>(null);\n    const [currentAmount, setCurrentAmount] = useState<number>(0);\n    const [title, setTitle] = useState<string>(\"\");\n    const [onAmountChange, setOnAmountChange] = useState<\n        ((newAmount: number) => void) | null\n    >(null);\n\n    useImperativeHandle(ref, () => ({\n        openModal: ({ id, title, amount, onAmountChange }) => {\n            setId(id);\n            setTitle(title);\n            setCurrentAmount(amount);\n            setOnAmountChange(() => onAmountChange);\n            setIsVisible(true);\n        },\n    }));\n\n    const handleAmountChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setCurrentAmount(Number(e.target.value));\n    };\n\n    const handleClose = () => {\n        if (onAmountChange) {\n            onAmountChange(currentAmount);\n        }\n        setIsVisible(false);\n    };\n\n    if (!isVisible) return null;\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-container\">\n                <h3>Modal</h3>\n                <h4>id: {id}</h4>\n                <h4>title: {title}</h4>\n                <p>amount: {currentAmount}</p>\n                <input\n                    type=\"number\"\n                    value={currentAmount}\n                    onChange={handleAmountChange}\n                />\n                <button onClick={handleClose}>close</button>\n            </div>\n        </div>\n    );\n});\n","// useReducer\n\nimport React, {\n    ChangeEvent,\n    memo,\n    useEffect,\n    useReducer,\n    useState,\n} from \"react\";\n\ninterface DataProps {\n    id: number;\n    amount: number;\n    title: string;\n}\n\nconst Data: DataProps[] = [\n    { id: 1, amount: 1, title: \"title1\" },\n    { id: 2, amount: 2, title: \"title2\" },\n    { id: 3, amount: 3, title: \"title3\" },\n];\n\ninterface ModalState {\n    selectedId: number | null;\n    selectedAmount: number;\n}\n\ntype ModalAction =\n    | { type: \"OPEN_MODAL\"; id: number; amount: number }\n    | { type: \"UPDATE_AMOUNT\"; amount: number }\n    | { type: \"CLOSE_MODAL\" };\n\nconst modalReducer = (state: ModalState, action: ModalAction): ModalState => {\n    switch (action.type) {\n        case \"OPEN_MODAL\":\n            return { selectedId: action.id, selectedAmount: action.amount };\n        case \"UPDATE_AMOUNT\":\n            return { ...state, selectedAmount: action.amount };\n        case \"CLOSE_MODAL\":\n            return { selectedId: null, selectedAmount: 0 };\n        default:\n            return state;\n    }\n};\n\nexport default function App() {\n    console.log(\"App\");\n    const [state, dispatch] = useReducer(modalReducer, {\n        selectedId: null,\n        selectedAmount: 0,\n    });\n\n    const [updatedData, setUpdatedData] = useState(Data);\n\n    const handleItemClick = (id: number, amount: number) => {\n        dispatch({ type: \"OPEN_MODAL\", id, amount });\n    };\n\n    const handleModalAmountChange = (amount: number) => {\n        dispatch({ type: \"UPDATE_AMOUNT\", amount });\n    };\n\n    const handleCloseModal = () => {\n        if (state.selectedId !== null) {\n            const newData = updatedData.map((item) =>\n                item.id === state.selectedId\n                    ? { ...item, amount: state.selectedAmount }\n                    : item\n            );\n            setUpdatedData(newData);\n        }\n        dispatch({ type: \"CLOSE_MODAL\" });\n    };\n\n    return (\n        <section className=\"products\">\n            <Parent data={updatedData} onItemClick={handleItemClick} />\n            {state.selectedId !== null && (\n                <Modal\n                    selectedId={state.selectedId}\n                    amount={state.selectedAmount}\n                    onAmountChange={handleModalAmountChange}\n                    onClose={handleCloseModal}\n                />\n            )}\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClick: (id: number, amount: number) => void;\n}\n\nconst Parent = memo(\n    ({ data, onItemClick }: ParentProps) => {\n        console.log(\"Parent\");\n\n        return (\n            <ul>\n                {data.map((item) => (\n                    <Item key={item.id} data={item} onItemClick={onItemClick} />\n                ))}\n            </ul>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClick: (id: number, amount: number) => void;\n}\n\nconst Item = memo(\n    ({ data, onItemClick }: ItemProps) => {\n        console.log(\"Item\", data.id);\n\n        const { id, title, amount } = data;\n        const [volume, setVolume] = useState<number>(amount);\n\n        useEffect(() => {\n            setVolume(amount);\n        }, [amount]);\n\n        const handleClick = () => {\n            onItemClick(id, volume);\n        };\n\n        return (\n            <li>\n                <p>\n                    [{id}] {title}: {volume}\n                </p>\n                <input\n                    type=\"number\"\n                    value={volume}\n                    onChange={(e) => setVolume(parseInt(e.target.value))}\n                />\n                <button onClick={handleClick}>Open Modal</button>\n            </li>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ModalProps {\n    selectedId: number;\n    amount: number;\n    onAmountChange: (amount: number) => void;\n    onClose: () => void;\n}\n\nfunction Modal({ selectedId, amount, onAmountChange, onClose }: ModalProps) {\n    console.log(\"Modal\");\n\n    const handleAmountChange = (e: ChangeEvent<HTMLInputElement>) => {\n        onAmountChange(Number(e.target.value));\n    };\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-container\">\n                <h3>Modal</h3>\n                <h4>id : {selectedId}</h4>\n                <p>Amount:</p>\n                <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                />\n                <button onClick={onClose}>Close</button>\n            </div>\n        </div>\n    );\n}\n","// forwardRef + useRedecuer\n\nimport React, {\n    memo,\n    forwardRef,\n    useImperativeHandle,\n    useReducer,\n    useRef,\n    useState,\n} from \"react\";\n\ninterface DataProps {\n    id: number;\n    title: string;\n    amount: number;\n}\n\nconst initialData: DataProps[] = [\n    { id: 1, title: \"title\", amount: 1 },\n    { id: 2, title: \"title\", amount: 2 },\n    { id: 3, title: \"title\", amount: 3 },\n];\n\ninterface ModalHandles {\n    openModal: (\n        id: number,\n        title: string,\n        amount: number,\n        onAmountChange: (newAmount: number) => void\n    ) => void;\n}\n\nconst UPDATE_AMOUNT = \"updateAmount\";\n\ntype Action = {\n    type: \"updateAmount\";\n    payload: {\n        id: number;\n        newAmount: number;\n    };\n};\n\nfunction dataReducer(state: DataProps[], action: Action): DataProps[] {\n    switch (action.type) {\n        case UPDATE_AMOUNT:\n            const newState = state.map((item) =>\n                item.id === action.payload.id\n                    ? { ...item, amount: action.payload.newAmount }\n                    : item\n            );\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default function App() {\n    console.log(\"App\");\n\n    const modalRef = useRef<ModalHandles | null>(null);\n    const [data, dispatch] = useReducer(dataReducer, initialData);\n\n    const handleItemClick = (\n        id: number,\n        title: string,\n        amount: number,\n        onAmountChange: (newAmount: number) => void\n    ) => {\n        modalRef.current?.openModal(id, title, amount, onAmountChange);\n    };\n\n    return (\n        <section className=\"products\">\n            <Parent\n                data={data}\n                onItemClicked={handleItemClick}\n                dispatch={dispatch}\n            />\n            <Modal ref={modalRef} dispatch={dispatch} />\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    dispatch: React.Dispatch<Action>;\n    onItemClicked: (\n        id: number,\n        title: string,\n        amount: number,\n        onAmountChange: (newAmount: number) => void\n    ) => void;\n}\n\nconst Parent = memo(\n    ({ data, dispatch, onItemClicked }: ParentProps) => {\n        console.log(\"Parent\");\n        return (\n            <ul>\n                {data.map((item) => (\n                    <Item\n                        key={item.id}\n                        data={item}\n                        dispatch={dispatch}\n                        onItemClicked={onItemClicked}\n                    />\n                ))}\n            </ul>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ItemProps {\n    data: DataProps;\n    dispatch: React.Dispatch<Action>;\n    onItemClicked: (\n        id: number,\n        title: string,\n        amount: number,\n        onAmountChange: (newAmount: number) => void\n    ) => void;\n}\n\nconst Item = memo(\n    ({ data, dispatch, onItemClicked }: ItemProps) => {\n        console.log(\"Item\", data.id);\n\n        const { id, title, amount } = data;\n\n        const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            // console.log(\"Item handleAmountChange\");\n\n            const newAmount = Number(e.target.value);\n            dispatch({\n                type: UPDATE_AMOUNT,\n                payload: {\n                    id,\n                    newAmount,\n                },\n            });\n        };\n\n        const handleItemClick = () => {\n            // console.log(\"Item handleItemClick\");\n            onItemClicked(id, title, amount, (newAmount) => {\n                dispatch({\n                    type: UPDATE_AMOUNT,\n                    payload: {\n                        id,\n                        newAmount,\n                    },\n                });\n            });\n        };\n        return (\n            <li>\n                <p>\n                    [{id}] {title}: {amount}\n                </p>\n                <input\n                    type=\"number\"\n                    value={amount}\n                    min=\"0\"\n                    onChange={handleAmountChange}\n                />\n                <button onClick={handleItemClick}>button</button>\n            </li>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data.amount === nextProps.data.amount;\n    }\n);\n\ninterface ModalProps {\n    dispatch: React.Dispatch<Action>;\n}\n\nconst Modal = memo(\n    forwardRef<ModalHandles, ModalProps>(({ dispatch }, ref) => {\n        console.log(\"Modal\");\n\n        const [isVisible, setIsVisible] = useState<boolean>(false);\n        const [id, setId] = useState<number | null>(null);\n        const [currentAmount, setCurrentAmount] = useState<number>(0);\n        const [title, setTitle] = useState<string>(\"\");\n\n        useImperativeHandle(ref, () => ({\n            openModal: (id, title, amount) => {\n                setId(id);\n                setTitle(title);\n                setCurrentAmount(amount);\n                setIsVisible(true);\n            },\n        }));\n\n        const handleClose = () => {\n            dispatch({\n                type: UPDATE_AMOUNT,\n                payload: {\n                    id: id!,\n                    newAmount: currentAmount,\n                },\n            });\n\n            setIsVisible(false);\n        };\n\n        return isVisible ? (\n            <div className=\"modal\">\n                <div className=\"modal-container\">\n                    <h3>Modal</h3>\n                    <h4>id: {id}</h4>\n                    <h4>title: {title}</h4>\n                    <p>amount: {currentAmount}</p>\n                    <input\n                        type=\"number\"\n                        min=\"0\"\n                        value={currentAmount}\n                        onChange={(e) =>\n                            setCurrentAmount(Number(e.target.value))\n                        }\n                    />\n                    <button onClick={handleClose}>close</button>\n                </div>\n            </div>\n        ) : null;\n    }),\n    (prevProps, nextProps) => {\n        return prevProps.dispatch === nextProps.dispatch;\n    }\n);\n","// forwardRef와 useReducer를 사용하여 모달 컴포넌트를 만들고 상태를 관리하는 예제\n\nimport {\n    ChangeEvent,\n    forwardRef,\n    // memo,\n    // useEffect,\n    useImperativeHandle,\n    useReducer,\n    useRef,\n    useState,\n} from \"react\";\n\n// 아이템 데이터에 대한 인터페이스 정의\ninterface DataProps {\n    id: string;\n    title: string;\n    amount: number;\n}\n\n// 아이템 데이터 예시\nconst Data: DataProps[] = [\n    { id: \"1\", title: \"title\", amount: 1 },\n    { id: \"2\", title: \"title\", amount: 2 },\n    { id: \"3\", title: \"title\", amount: 3 },\n];\n\n// 모달 열기 시 필요한 속성을 정의한 인터페이스\ninterface OpenModalProps {\n    id: string;\n    title: string;\n    amount: number;\n    onAmountChange: (newAmount: number) => void;\n}\n\n// 모달을 열 때 필요한 기능을 정의하는 인터페이스\ninterface ModalHandles {\n    openModal: (props: OpenModalProps) => void;\n}\n\nexport default function App() {\n    console.log(\"App\");\n\n    const modalRef = useRef<ModalHandles | null>(null);\n\n    // 아이템 클릭 시 실행되는 함수. 모달을 열어준다.\n    const handleItemClick = (props: OpenModalProps) => {\n        modalRef.current?.openModal(props);\n    };\n\n    // useEffect(() => {\n    //     console.log(\"handleItemClick 변경\");\n    // }, [handleItemClick]);\n\n    return (\n        <section className=\"products\">\n            <Parent data={Data} onItemClicked={handleItemClick} />\n            <Modal ref={modalRef} />\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\n// 부모 컴포넌트. 데이터를 받아 Item 컴포넌트를 렌더링한다.\nfunction Parent({ data, onItemClicked }: ParentProps) {\n    console.log(\"Parent\");\n    return (\n        <ul>\n            {data.map((item, index) => (\n                <Item key={index} data={item} onItemClicked={onItemClicked} />\n            ))}\n        </ul>\n    );\n}\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\n// 아이템 컴포넌트. 각 아이템을 렌더링하고 클릭 시 모달을 열어준다.\nfunction Item({ data, onItemClicked }: ItemProps) {\n    console.log(\"Item\", data.id);\n\n    const { id, title, amount } = data;\n    const [currentAmount, setCurrentAmount] = useState<number>(amount);\n\n    // 버튼을 클릭하면 모달을 연다.\n    const handleClick = () => {\n        onItemClicked({\n            id,\n            title,\n            amount: currentAmount,\n            onAmountChange: setCurrentAmount,\n        });\n    };\n\n    // useEffect(() => {\n    //     console.log(\"handleClick 변경\");\n    // }, [handleClick]);\n\n    return (\n        <li>\n            <p>\n                [{id}] {title}, amount: {currentAmount}\n            </p>\n            <input\n                type=\"number\"\n                value={currentAmount}\n                min=\"0\"\n                onChange={(e) => setCurrentAmount(Number(e.target.value))}\n            />\n            <button onClick={handleClick}>button</button>\n        </li>\n    );\n}\n\n// 리듀서의 액션 타입 정의\nconst OPEN_MODAL = \"OPEN_MODAL\";\nconst CLOSE_MODAL = \"CLOSE_MODAL\";\nconst SET_AMOUNT = \"SET_AMOUNT\";\n\n// 모달 상태 정의\ntype State = {\n    isVisible: boolean;\n    id: string | null;\n    title: string;\n    amount: number;\n    onAmountChange: ((newAmount: number) => void) | null;\n};\n\n// 모달의 액션을 정의\ntype Action =\n    | {\n          type: typeof OPEN_MODAL;\n          id: string | null;\n          title: string;\n          amount: number;\n          onAmountChange: ((newAmount: number) => void) | null;\n      }\n    | { type: typeof CLOSE_MODAL }\n    | { type: typeof SET_AMOUNT; amount: number };\n\n// 모달의 초기 상태를 정의\nconst initialState = {\n    isVisible: false,\n    id: null,\n    title: \"\",\n    amount: 0,\n    onAmountChange: null,\n};\n\n// 리듀서를 사용하여 모달의 상태를 관리\nconst reducer = (state: State, action: Action) => {\n    switch (action.type) {\n        case OPEN_MODAL:\n            const { id, title, amount, onAmountChange } = action;\n            return {\n                isVisible: true,\n                id,\n                title,\n                amount,\n                onAmountChange,\n            };\n        case CLOSE_MODAL:\n            return initialState;\n        case SET_AMOUNT:\n            return {\n                ...state,\n                amount: action.amount,\n            };\n        default:\n            return state;\n    }\n};\n\n// 모달 컴포넌트. forwardRef를 사용하여 모달을 제어할 수 있는 메서드를 노출\n\nconst Modal = forwardRef<ModalHandles, {}>((props, ref) => {\n    console.log(\"Modal\");\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const { isVisible, id, title, amount, onAmountChange } = state;\n\n    useImperativeHandle(ref, () => ({\n        openModal: ({ id, title, amount, onAmountChange }: OpenModalProps) => {\n            dispatch({\n                type: OPEN_MODAL,\n                id,\n                title,\n                amount,\n                onAmountChange,\n            });\n        },\n    }));\n\n    const handleAmountChange = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch({ type: SET_AMOUNT, amount: Number(e.target.value) });\n    };\n\n    const handleClose = () => {\n        if (onAmountChange) {\n            onAmountChange(amount);\n        }\n\n        dispatch({ type: CLOSE_MODAL });\n    };\n\n    if (!isVisible) return null;\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-container\">\n                <h3>Modal</h3>\n                <h4>id: {id}</h4>\n                <h4>title: {title}</h4>\n                <p>amount: {amount}</p>\n                <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                />\n                <button onClick={handleClose}>close</button>\n            </div>\n        </div>\n    );\n});\n","import { ChangeEvent, memo, useReducer, useState } from \"react\";\n\ninterface DataProps {\n    id: string;\n    title: string;\n    amount: number;\n}\n\nconst Data: DataProps[] = [\n    { id: \"1\", title: \"title\", amount: 1 },\n    { id: \"2\", title: \"title\", amount: 2 },\n    { id: \"3\", title: \"title\", amount: 3 },\n];\n\ninterface OpenModalProps {\n    id: string;\n    title: string;\n    amount: number;\n    onAmountChange: (newAmount: number) => void;\n}\n\nexport default function App() {\n    console.log(\"App\");\n\n    const { openModal, Modal } = useModal();\n\n    const handleItemClick = (props: OpenModalProps) => {\n        openModal(props);\n    };\n\n    return (\n        <section className=\"products\">\n            <Parent data={Data} onItemClicked={handleItemClick} />\n            <Modal />\n        </section>\n    );\n}\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nconst Parent = memo(\n    ({ data, onItemClicked }: ParentProps) => {\n        console.log(\"Parent\");\n        return (\n            <ul>\n                {data.map((item, index) => (\n                    <Item\n                        key={index}\n                        data={item}\n                        onItemClicked={onItemClicked}\n                    />\n                ))}\n            </ul>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nconst Item = memo(\n    ({ data, onItemClicked }: ItemProps) => {\n        console.log(\"Item\", data.id);\n\n        const { id, title, amount } = data;\n        const [currentAmount, setCurrentAmount] = useState<number>(amount);\n\n        const handleClick = () => {\n            onItemClicked({\n                id,\n                title,\n                amount: currentAmount,\n                onAmountChange: setCurrentAmount,\n            });\n        };\n\n        return (\n            <li>\n                <p>\n                    [{id}] {title}, amount: {currentAmount}\n                </p>\n                <input\n                    type=\"number\"\n                    value={currentAmount}\n                    min=\"0\"\n                    onChange={(e) => setCurrentAmount(Number(e.target.value))}\n                />\n                <button onClick={handleClick}>button</button>\n            </li>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data.amount === nextProps.data.amount;\n    }\n);\n\nfunction useModal() {\n    const OPEN_MODAL = \"OPEN_MODAL\";\n    const CLOSE_MODAL = \"CLOSE_MODAL\";\n    const SET_AMOUNT = \"SET_AMOUNT\";\n\n    type State = {\n        isVisible: boolean;\n        id: string | null;\n        title: string;\n        amount: number;\n        onAmountChange: ((newAmount: number) => void) | null;\n    };\n\n    type Action =\n        | {\n              type: typeof OPEN_MODAL;\n              id: string | null;\n              title: string;\n              amount: number;\n              onAmountChange: ((newAmount: number) => void) | null;\n          }\n        | { type: typeof CLOSE_MODAL }\n        | { type: typeof SET_AMOUNT; amount: number };\n\n    const initialState = {\n        isVisible: false,\n        id: null,\n        title: \"\",\n        amount: 0,\n        onAmountChange: null,\n    };\n\n    const reducer = (state: State, action: Action) => {\n        switch (action.type) {\n            case OPEN_MODAL:\n                const { id, title, amount, onAmountChange } = action;\n                return {\n                    isVisible: true,\n                    id,\n                    title,\n                    amount,\n                    onAmountChange,\n                };\n            case CLOSE_MODAL:\n                return initialState;\n            case SET_AMOUNT:\n                return {\n                    ...state,\n                    amount: action.amount,\n                };\n            default:\n                return state;\n        }\n    };\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const openModal = ({\n        id,\n        title,\n        amount,\n        onAmountChange,\n    }: OpenModalProps) => {\n        dispatch({\n            type: OPEN_MODAL,\n            id,\n            title,\n            amount,\n            onAmountChange,\n        });\n    };\n\n    const closeModal = () => {\n        if (state.onAmountChange) {\n            state.onAmountChange(state.amount);\n        }\n\n        dispatch({ type: CLOSE_MODAL });\n    };\n\n    const handleAmountChange = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch({ type: SET_AMOUNT, amount: Number(e.target.value) });\n    };\n\n    const Modal = () => {\n        return state.isVisible ? (\n            <div className=\"modal\">\n                <div className=\"modal-container\">\n                    <h3>Modal</h3>\n                    <h4>id: {state.id}</h4>\n                    <h4>title: {state.title}</h4>\n                    <p>amount: {state.amount}</p>\n                    <input\n                        type=\"number\"\n                        value={state.amount}\n                        onChange={handleAmountChange}\n                    />\n                    <button onClick={closeModal}>close</button>\n                </div>\n            </div>\n        ) : null;\n    };\n\n    return { openModal, closeModal, Modal, modalState: state };\n}\n","import React, {\n    memo,\n    useCallback,\n    // useEffect,\n    useState,\n} from \"react\";\n\ninterface DataProps {\n    id: string;\n    title: string;\n    amount: number;\n}\n\nconst Data: DataProps[] = [\n    { id: \"1\", title: \"title\", amount: 1 },\n    { id: \"2\", title: \"title\", amount: 2 },\n    { id: \"3\", title: \"title\", amount: 3 },\n];\n\ninterface OpenModalProps {\n    id: string;\n    title: string;\n    amount: number;\n    onAmountChange: (newAmount: number) => void;\n}\n\nexport default function App() {\n    console.log(\"App\");\n\n    const handleItemClick = useCallback((props: OpenModalProps) => {\n        // ... 처리 로직이 필요한 경우 여기에 작성\n    }, []);\n\n    return (\n        <section className=\"products\">\n            <AppContainer onItemClicked={handleItemClick} />\n        </section>\n    );\n}\n\nconst AppContainer: React.FC<{\n    onItemClicked: (props: OpenModalProps) => void;\n}> = ({ onItemClicked }) => {\n    console.log(\"AppContainer\");\n\n    const [modalProps, setModalProps] = useState<OpenModalProps | null>(null);\n\n    const closeModal = useCallback(() => {\n        setModalProps(null);\n    }, []);\n\n    // useEffect(() => {\n    //     console.log(\"closeModal 변경되었습니다. \");\n    // }, [closeModal]);\n\n    return (\n        <>\n            <Parent data={Data} onItemClicked={setModalProps} />\n            {modalProps && <Modal {...modalProps} onClose={closeModal} />}\n        </>\n    );\n};\n\ninterface ParentProps {\n    data: DataProps[];\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nconst Parent = memo(\n    ({ data, onItemClicked }: ParentProps) => {\n        console.log(\"Parent\");\n\n        return (\n            <ul>\n                {data.map((item, index) => (\n                    <Item\n                        key={index}\n                        data={item}\n                        onItemClicked={onItemClicked}\n                    />\n                ))}\n            </ul>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ItemProps {\n    data: DataProps;\n    onItemClicked: (props: OpenModalProps) => void;\n}\n\nconst Item = memo(\n    ({ data, onItemClicked }: ItemProps) => {\n        console.log(\"Item\", data.id);\n\n        const { id, title, amount } = data;\n        const [currentAmount, setCurrentAmount] = useState<number>(amount);\n\n        const handleClick = () => {\n            onItemClicked({\n                id,\n                title,\n                amount: currentAmount,\n                onAmountChange: setCurrentAmount,\n            });\n        };\n\n        return (\n            <li>\n                <p>\n                    [{id}] {title}, amount: {currentAmount}\n                </p>\n                <input\n                    type=\"number\"\n                    value={currentAmount}\n                    min=\"0\"\n                    onChange={(e) => setCurrentAmount(Number(e.target.value))}\n                />\n                <button onClick={handleClick}>button</button>\n            </li>\n        );\n    },\n    (prevProps, nextProps) => {\n        return prevProps.data === nextProps.data;\n    }\n);\n\ninterface ModalProps extends OpenModalProps {\n    onClose: () => void;\n}\n\nfunction Modal({ id, title, amount, onAmountChange, onClose }: ModalProps) {\n    console.log(\"Modal\");\n\n    const [modalAmount, setModalAmount] = useState(amount);\n\n    const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setModalAmount(Number(e.target.value));\n    };\n\n    const handleClose = () => {\n        onAmountChange(modalAmount);\n        onClose();\n    };\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-container\">\n                <h3>Modal</h3>\n                <h4>id: {id}</h4>\n                <h4>title: {title}</h4>\n                <p>amount: {modalAmount}</p>\n                <input\n                    type=\"number\"\n                    value={modalAmount}\n                    onChange={handleAmountChange}\n                />\n                <button onClick={handleClose}>close</button>\n            </div>\n        </div>\n    );\n}\n","import \"../css/productsPage.css\";\nimport \"../css/modal.css\";\nimport Products1 from \"../contents/products/Products1\";\nimport Products2 from \"../contents/products/Products2\";\nimport Products3 from \"../contents/products/Products3\";\nimport Products3Memo from \"../contents/products/Products3Memo\";\nimport Products4 from \"../contents/products/Products4\";\nimport Products5 from \"../contents/products/Products5\";\nimport Products6 from \"../contents/products/Products6\";\nimport Products7 from \"../contents/products/Products7\";\nimport Products8 from \"../contents/products/Products8\";\n\nexport default function memoPage() {\n    return (\n        <section className=\"productsPage\">\n            <h1>Prodcuts</h1>\n\n            <h2>Products 1 : props drilling(미완성)</h2>\n            <p>data 참조 위해 남겨 줌</p>\n            <Products1 />\n\n            <h2>Products 2 : props drilling, only useState *****</h2>\n            <Products2 />\n            <p>\n                onAmountChange는 이 코드에서의 key concept 중 하나입니다. 이\n                함수는 Item 컴포넌트에서 수량이 변경될 때마다 호출되며, Modal\n                컴포넌트에게 변경된 수량을 전달하는 역할을 합니다.\n            </p>\n\n            <h2>Products 3 : forwardRef *****</h2>\n            <Products3 />\n\n            <h2>Products 3 : forwardRef, 메모리 기능 추가</h2>\n            <Products3Memo />\n\n            <h2>Products 4 : useReducer</h2>\n            <p>\n                - 모달 열릴 때 Parent, 모든 Item이 리렌더링, memo 추가해야 한다.\n            </p>\n            <p>- 모달 열릴 때 App이 리렌더링</p>\n            <Products4 />\n\n            <h2>Products 5 : forwardRef + useReducer(Item 기준)</h2>\n            <p>\n                - useReducer를 추가한후 Item input value가 변경될 때마다,\n                Modal이 닫힐 때마다 모든 Item이 리렌더링 된다.\n            </p>\n            <Products5 />\n\n            <h2>Products 6 : forwardRef + useReducer(Modal 기준) *****</h2>\n            <p>\n                - Modal에 useReducer를 적용하니 이전 코드에 비해 코드가 눈에 더\n                잘 들어오고 관리도 편한 것 같다.\n            </p>\n            <Products6 />\n\n            <h2>\n                Products 7 : useReducer(Modal 기준), Products 6 에서 forwardRef\n                제거\n            </h2>\n            <p>- 모달이 변경될 때 App, Parent, 모든 Item이 리렌더링된다. </p>\n            <Products7 />\n\n            <h2>Products 8 : Products2 의 리렌더링 개선</h2>\n            <p></p>\n            <Products8 />\n        </section>\n    );\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["Data","id","title","amount","App","_useState","useState","_useState2","_slicedToArray","modalData","setModalData","_useState3","_useState4","isVisible","setIsVisible","_jsxs","className","children","_jsx","Parent","data","onItemClicked","onAmountChange","Modal","onClose","newAmount","updatedData","map","item","_objectSpread","splice","apply","length","concat","_toConsumableArray","_ref","List","index","Item","_ref2","_ref3","_useState5","_useState6","currentAmount","setCurrentAmount","type","value","min","onChange","e","Number","target","onClick","_ref4","_useState7","_useState8","setNewAmount","console","log","modalProps","setModalProps","handleItemClick","useCallback","props","closeModal","memo","prevProps","nextProps","modalAmount","setModalAmount","modalRef","useRef","_modalRef$current","current","openModal","ref","forwardRef","setId","_useState9","_useState10","setTitle","_useState11","_useState12","setOnAmountChange","useImperativeHandle","modalReducer","state","action","selectedId","selectedAmount","_useReducer","useReducer","_useReducer2","dispatch","setUpdatedData","onItemClick","newData","volume","setVolume","useEffect","parseInt","initialData","UPDATE_AMOUNT","dataReducer","payload","OPEN_MODAL","CLOSE_MODAL","SET_AMOUNT","initialState","reducer","_useModal","handleAmountChange","modalState","useModal","AppContainer","_Fragment","memoPage","Products1","Products2","Products3","Products3Memo","Products4","Products5","Products6","Products7","Products8","_defineProperty","obj","key","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}