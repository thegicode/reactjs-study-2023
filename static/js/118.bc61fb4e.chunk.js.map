{"version":3,"file":"static/js/118.bc61fb4e.chunk.js","mappings":"gLAEe,SAASA,IACpB,IAAAC,GAA4BC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxB,OAAOI,EAAAA,EAAAA,KAACC,EAAI,CAACH,OAAQA,EAAQC,UAAWA,GAC5C,CAOA,IAAME,EAA4B,SAAHC,GAA+B,IAAzBJ,EAAMI,EAANJ,OAAQC,EAASG,EAATH,UACzC,OACII,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBL,EAAAA,EAAAA,KAACM,EAAM,CAACR,OAAQA,KAChBE,EAAAA,EAAAA,KAACO,EAAO,CAACT,OAAQA,KACjBE,EAAAA,EAAAA,KAACQ,EAAM,CAACV,OAAQA,EAAQC,UAAWA,MAG/C,EAMMO,EAAS,SAAHG,GAAiC,IAA3BX,EAAMW,EAANX,OACd,OACIE,EAAAA,EAAAA,KAAA,UAAQI,UAAWN,EAAS,OAAS,SAASO,UAC1CL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YAGhB,EAMME,EAAU,SAAHG,GAAkC,IAA5BZ,EAAMY,EAANZ,OACf,OACIE,EAAAA,EAAAA,KAAA,WAASI,UAAW,YAAcN,EAAS,OAAS,UAAUO,UAC1DL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,aAGhB,EAOMG,EAAS,SAAHG,GAA4C,IAAtCb,EAAMa,EAANb,OAAQC,EAASY,EAATZ,UAKtB,OACII,EAAAA,EAAAA,MAAA,UAAQC,UAAWN,EAAS,OAAS,SAASO,SAAA,EAC1CL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YACJL,EAAAA,EAAAA,KAAA,UAAQY,QAPD,WACXb,GAAWD,EACf,EAKgCO,SAAC,gBAGrC,ECvDaQ,GAAeC,EAAAA,EAAAA,eAAuC,MCJpD,SAASrB,IACpB,IAAAC,GAA4BC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxB,OACII,EAAAA,EAAAA,KAACa,EAAaE,SAAQ,CAACC,MAAO,CAAElB,OAAAA,EAAQC,UAAAA,GAAYM,UAChDL,EAAAA,EAAAA,KAACC,EAAI,KAGjB,CAEA,IAAMA,EAAO,WACT,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBL,EAAAA,EAAAA,KAACM,EAAM,KACPN,EAAAA,EAAAA,KAACO,EAAO,KACRP,EAAAA,EAAAA,KAACQ,EAAM,MAGnB,EAEMF,EAAS,WACX,IAAMW,GAAeC,EAAAA,EAAAA,YAAWL,GAEhC,IAAKI,EACD,MAAM,IAAIE,MAAM,sDAGpB,IAAQrB,EAAWmB,EAAXnB,OAER,OACIE,EAAAA,EAAAA,KAAA,UAAQI,UAAWN,EAAS,OAAS,SAASO,UAC1CL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YAGhB,EAEME,EAAU,WACZ,IAAMU,GAAeC,EAAAA,EAAAA,YAAWL,GAEhC,IAAKI,EACD,MAAM,IAAIE,MAAM,sDAGpB,IAAQrB,EAAWmB,EAAXnB,OAER,OACIE,EAAAA,EAAAA,KAAA,WAASI,UAAW,YAAcN,EAAS,OAAS,UAAUO,UAC1DL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,aAGhB,EAEMG,EAAS,WACX,IAAMS,GAAeC,EAAAA,EAAAA,YAAWL,GAEhC,IAAKI,EACD,MAAM,IAAIE,MAAM,sDAGpB,IAAQrB,EAAsBmB,EAAtBnB,OAAQC,EAAckB,EAAdlB,UAMhB,OACII,EAAAA,EAAAA,MAAA,UAAQC,UAAWN,EAAS,OAAS,SAASO,SAAA,EAC1CL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YACJL,EAAAA,EAAAA,KAAA,UAAQY,QAPD,WACXb,GAAWD,EACf,EAKgCO,SAAC,gBAGrC,ECvEae,GAAeN,EAAAA,EAAAA,eAA6B,MCE1C,SAASO,IACpB,IAAA3B,GAA4BC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxB,OACII,EAAAA,EAAAA,KAACoB,EAAaL,SAAQ,CAACC,MAAM,2DAAaX,UACtCL,EAAAA,EAAAA,KAACa,EAAaE,SAAQ,CAACC,MAAO,CAAElB,OAAAA,EAAQC,UAAAA,GAAYM,UAChDL,EAAAA,EAAAA,KAACC,EAAI,OAIrB,CAEA,IAAMA,EAAO,WACT,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBL,EAAAA,EAAAA,KAACM,EAAM,KACPN,EAAAA,EAAAA,KAACO,EAAO,KACRP,EAAAA,EAAAA,KAACQ,EAAM,MAGnB,EAEMF,EAAS,WACX,IAAMW,GAAeC,EAAAA,EAAAA,YAAWL,GAC1BS,GAAeJ,EAAAA,EAAAA,YAAWE,GAEhC,IAAKH,EACD,MAAM,IAAIE,MAAM,sDAGpB,IAEMf,EAAY,UAFCa,EAAXnB,OAE+B,OAAS,UAEhD,OACIE,EAAAA,EAAAA,KAAA,UAAQI,UAAWA,EAAUC,UACzBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,YAAUiB,MAG1B,EAEMf,EAAU,WACZ,IAAMU,GAAeC,EAAAA,EAAAA,YAAWL,GAC1BS,GAAeJ,EAAAA,EAAAA,YAAWE,GAEhC,IAAKH,EACD,MAAM,IAAIE,MAAM,sDAGpB,IAEMf,EAAY,kBAFCa,EAAXnB,OAEuC,OAAS,UAExD,OACIE,EAAAA,EAAAA,KAAA,WAASI,UAAWA,EAAUC,UAC1BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,aAAWiB,MAG3B,EAEMd,EAAS,WACX,IAAMS,GAAeC,EAAAA,EAAAA,YAAWL,GAEhC,IAAKI,EACD,MAAM,IAAIE,MAAM,sDAGpB,IAAQrB,EAAsBmB,EAAtBnB,OAAQC,EAAckB,EAAdlB,UAMVK,EAAY,UAAYN,EAAS,OAAS,UAEhD,OACIK,EAAAA,EAAAA,MAAA,UAAQC,UAAWA,EAAUC,SAAA,EACzBL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YACJL,EAAAA,EAAAA,KAAA,UAAQY,QATD,WACXb,GAAWD,EACf,EAOgCO,SAAC,gBAGrC,EChFMQ,GAAeC,EAAAA,EAAAA,eAA4B,MAElC,SAASS,IACpB,IAAA7B,GAA0BC,EAAAA,EAAAA,UAAgB,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3C8B,EAAK5B,EAAA,GAAE6B,EAAQ7B,EAAA,GACtB,OACIO,EAAAA,EAAAA,MAACU,EAAaE,SAAQ,CAACC,MAAOQ,EAAMnB,SAAA,EAChCL,EAAAA,EAAAA,KAAC0B,EAAI,KACLvB,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIL,EAAAA,EAAAA,KAAA,SACI2B,KAAK,WACLC,QAAmB,SAAVJ,EACTK,SAAU,SAACC,GACPL,EAASK,EAAEC,OAAOH,QAAU,OAAS,QACzC,IACF,qBAKlB,CAEA,SAASF,IACL,OACIvB,EAAAA,EAAAA,MAAC6B,EAAK,CAACC,MAAM,UAAS5B,SAAA,EAClBL,EAAAA,EAAAA,KAACkC,EAAM,CAAA7B,SAAC,aACRL,EAAAA,EAAAA,KAACkC,EAAM,CAAA7B,SAAC,aAGpB,CAOA,SAAS2B,EAAK9B,GAAmC,IAAhC+B,EAAK/B,EAAL+B,MAAO5B,EAAQH,EAARG,SAEdD,EAAY,sBADJc,EAAAA,EAAAA,YAAWL,GAEzB,OACIV,EAAAA,EAAAA,MAAA,WAASC,UAAWA,EAAUC,SAAA,EAC1BL,EAAAA,EAAAA,KAAA,MAAAK,SAAK4B,IACJ5B,IAGb,CAMA,SAAS6B,EAAMzB,GAA6B,IAA1BJ,EAAQI,EAARJ,SAERD,EAAY,WADJc,EAAAA,EAAAA,YAAWL,GAEzB,OAAOb,EAAAA,EAAAA,KAAA,UAAQI,UAAWA,EAAUC,SAAEA,GAC1C,CC9CA,IAAM8B,GAAqBrB,EAAAA,EAAAA,eAA6C,MAEzD,SAASsB,IACpB,IAAA1C,GAAsCC,EAAAA,EAAAA,UAClC,MACHC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFM2C,EAAWzC,EAAA,GAAE0C,EAAc1C,EAAA,GAIlC,OACII,EAAAA,EAAAA,KAACmC,EAAmBpB,SAAQ,CAACC,MAAO,CAAEqB,YAAAA,EAAaC,eAAAA,GAAiBjC,UAChEL,EAAAA,EAAAA,KAACgC,EAAK,CAACC,MAAM,UAAS5B,UAClBL,EAAAA,EAAAA,KAACuC,EAAW,OAI5B,CAMA,SAASP,EAAK9B,GAAmC,IAAhC+B,EAAK/B,EAAL+B,MAAO5B,EAAQH,EAARG,SACpB,OACIF,EAAAA,EAAAA,MAAA,WAASC,UAAU,QAAOC,SAAA,EACtBL,EAAAA,EAAAA,KAAA,MAAAK,SAAK4B,IACJ5B,IAGb,CAEA,SAASkC,IACL,IAAMC,GAAetB,EAAAA,EAAAA,YAAWiB,GAChC,GAAqB,OAAjBK,EACA,MAAM,IAAIrB,MAAM,mCAGpB,IAAQkB,EAAgCG,EAAhCH,YAAaC,EAAmBE,EAAnBF,eACrB,OAAoB,OAAhBD,GACOlC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,oBAAkBgC,EAAYI,KAAK,QAI7CzC,EAAAA,EAAAA,KAACkC,EAAM,CACHtB,QAAS,WACL0B,EAAe,CAAEG,KAAM,UAC3B,EAAEpC,SACL,oBAIT,CAOA,SAAS6B,EAAMzB,GAAsC,IAAnCJ,EAAQI,EAARJ,SAAUO,EAAOH,EAAPG,QACxB,OACIZ,EAAAA,EAAAA,KAAA,UAAQI,UAAU,SAASQ,QAASA,EAAQP,SACvCA,GAGb,CCnEe,SAASqC,IACpB,OACIvC,EAAAA,EAAAA,MAAA,WAASC,UAAU,iBAAgBC,SAAA,EAC/BL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,+BACJL,EAAAA,EAAAA,KAAA,KAAAK,UACIL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,iJAKZL,EAAAA,EAAAA,KAAA,QAAMI,UAAU,iBAAgBC,SAAC,2CAIjCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,iFACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,8HACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,sFAEAL,EAAAA,EAAAA,KAAA,UAAQ2C,MAAO,CAAEC,eAAgB,aAAcvC,SAAC,iGAIpDL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,6hBAMJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,6UAORL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,mDACJL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,gFACHL,EAAAA,EAAAA,KAAC6C,EAAW,KAEZ7C,EAAAA,EAAAA,KAAA,MAAAK,SAAI,kCACJL,EAAAA,EAAAA,KAAA,MAAAK,UACIL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,yPAMRL,EAAAA,EAAAA,KAACP,EAAW,KAEZO,EAAAA,EAAAA,KAAA,MAAAK,SAAI,SACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAAS,yEACZL,EAAAA,EAAAA,KAACqB,EAAW,KAEZrB,EAAAA,EAAAA,KAAA,MAAAK,SAAI,sCACJL,EAAAA,EAAAA,KAAC8C,EAAW,KAEZ9C,EAAAA,EAAAA,KAAA,MAAAK,SAAI,uCACJL,EAAAA,EAAAA,KAAC+C,EAAW,MAGxB,C","sources":["contents/useContext/UseContext0.tsx","context/ThemeContext.tsx","contents/useContext/UseContext1.tsx","context/TitleContext.tsx","contents/useContext/UseContext2.tsx","contents/useContext/UseContext3.tsx","contents/useContext/UseContext4.tsx","pages/UseContextPage.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function UseConText1() {\n    const [isDark, setIsDark] = useState<boolean>(false);\n    return <Page isDark={isDark} setIsDark={setIsDark} />;\n}\n\ninterface PageProps {\n    isDark: boolean;\n    setIsDark: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Page: React.FC<PageProps> = ({ isDark, setIsDark }) => {\n    return (\n        <div className=\"useContext1\">\n            <Header isDark={isDark} />\n            <Content isDark={isDark} />\n            <Footer isDark={isDark} setIsDark={setIsDark} />\n        </div>\n    );\n};\n\ninterface HeaderProps {\n    isDark: boolean;\n}\n\nconst Header = ({ isDark }: HeaderProps) => {\n    return (\n        <header className={isDark ? \"dark\" : \"noDark\"}>\n            <h1>Header</h1>\n        </header>\n    );\n};\n\ninterface ContentProps {\n    isDark: boolean;\n}\n\nconst Content = ({ isDark }: ContentProps) => {\n    return (\n        <section className={\"content \" + (isDark ? \"dark\" : \"noDark\")}>\n            <h1>Content</h1>\n        </section>\n    );\n};\n\ninterface FooterProps {\n    isDark: boolean;\n    setIsDark: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Footer = ({ isDark, setIsDark }: FooterProps) => {\n    const toggle = () => {\n        setIsDark(!isDark);\n    };\n\n    return (\n        <footer className={isDark ? \"dark\" : \"noDark\"}>\n            <h1>Footer</h1>\n            <button onClick={toggle}>Dark Mode</button>\n        </footer>\n    );\n};\n","import { createContext } from \"react\";\n\ninterface ThemeContextType {\n    isDark: boolean;\n    setIsDark: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const ThemeContext = createContext<ThemeContextType | null>(null);\n","import { useContext, useState } from \"react\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\nexport default function UseConText1() {\n    const [isDark, setIsDark] = useState<boolean>(false);\n    return (\n        <ThemeContext.Provider value={{ isDark, setIsDark }}>\n            <Page />\n        </ThemeContext.Provider>\n    );\n}\n\nconst Page = () => {\n    return (\n        <div className=\"useContext1\">\n            <Header />\n            <Content />\n            <Footer />\n        </div>\n    );\n};\n\nconst Header = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error(\"Header must be used within a ThemeContext provider\");\n    }\n\n    const { isDark } = themeContext;\n\n    return (\n        <header className={isDark ? \"dark\" : \"noDark\"}>\n            <h1>Header</h1>\n        </header>\n    );\n};\n\nconst Content = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error(\"Header must be used within a ThemeContext provider\");\n    }\n\n    const { isDark } = themeContext;\n\n    return (\n        <section className={\"content \" + (isDark ? \"dark\" : \"noDark\")}>\n            <h1>Content</h1>\n        </section>\n    );\n};\n\nconst Footer = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error(\"Header must be used within a ThemeContext provider\");\n    }\n\n    const { isDark, setIsDark } = themeContext;\n\n    const toggle = () => {\n        setIsDark(!isDark);\n    };\n\n    return (\n        <footer className={isDark ? \"dark\" : \"noDark\"}>\n            <h1>Footer</h1>\n            <button onClick={toggle}>Dark Mode</button>\n        </footer>\n    );\n};\n","import { createContext } from \"react\";\n\nexport const TitleContext = createContext<string | null>(null);\n","import { useContext, useState } from \"react\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport { TitleContext } from \"../../context/TitleContext\";\n\nexport default function UseConText2() {\n    const [isDark, setIsDark] = useState<boolean>(false);\n    return (\n        <TitleContext.Provider value=\"예쁜 타이틀 컨텍스트\">\n            <ThemeContext.Provider value={{ isDark, setIsDark }}>\n                <Page />\n            </ThemeContext.Provider>\n        </TitleContext.Provider>\n    );\n}\n\nconst Page = () => {\n    return (\n        <div className=\"useContext1\">\n            <Header />\n            <Content />\n            <Footer />\n        </div>\n    );\n};\n\nconst Header = () => {\n    const themeContext = useContext(ThemeContext);\n    const titleContext = useContext(TitleContext);\n\n    if (!themeContext) {\n        throw new Error(\"Header must be used within a ThemeContext provider\");\n    }\n\n    const { isDark } = themeContext;\n\n    const className = \"theme-\" + (isDark ? \"dark\" : \"normal\");\n\n    return (\n        <header className={className}>\n            <h1>Header - {titleContext}</h1>\n        </header>\n    );\n};\n\nconst Content = () => {\n    const themeContext = useContext(ThemeContext);\n    const titleContext = useContext(TitleContext);\n\n    if (!themeContext) {\n        throw new Error(\"Header must be used within a ThemeContext provider\");\n    }\n\n    const { isDark } = themeContext;\n\n    const className = \"content theme-\" + (isDark ? \"dark\" : \"normal\");\n\n    return (\n        <section className={className}>\n            <h1>Content - {titleContext}</h1>\n        </section>\n    );\n};\n\nconst Footer = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error(\"Header must be used within a ThemeContext provider\");\n    }\n\n    const { isDark, setIsDark } = themeContext;\n\n    const toggle = () => {\n        setIsDark(!isDark);\n    };\n\n    const className = \"theme-\" + (isDark ? \"dark\" : \"normal\");\n\n    return (\n        <footer className={className}>\n            <h1>Footer</h1>\n            <button onClick={toggle}>Dark Mode</button>\n        </footer>\n    );\n};\n","import { createContext, useContext, useState, ReactNode } from \"react\";\n\ntype Theme = \"light\" | \"dark\";\n\nconst ThemeContext = createContext<Theme | null>(null);\n\nexport default function UseContext3() {\n    const [theme, setTheme] = useState<Theme>(\"light\");\n    return (\n        <ThemeContext.Provider value={theme}>\n            <Form />\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={theme === \"dark\"}\n                    onChange={(e) => {\n                        setTheme(e.target.checked ? \"dark\" : \"light\");\n                    }}\n                />\n                Use dark mode\n            </label>\n        </ThemeContext.Provider>\n    );\n}\n\nfunction Form() {\n    return (\n        <Panel title=\"Welcome\">\n            <Button>Sign up</Button>\n            <Button>Log in</Button>\n        </Panel>\n    );\n}\n\ninterface PanelProps {\n    title: string;\n    children: ReactNode;\n}\n\nfunction Panel({ title, children }: PanelProps) {\n    const theme = useContext(ThemeContext);\n    const className = \"useContext4 panel-\" + theme;\n    return (\n        <section className={className}>\n            <h1>{title}</h1>\n            {children}\n        </section>\n    );\n}\n\ninterface ButtonProps {\n    children: ReactNode;\n}\n\nfunction Button({ children }: ButtonProps) {\n    const theme = useContext(ThemeContext);\n    const className = \"button-\" + theme;\n    return <button className={className}>{children}</button>;\n}\n","import { createContext, ReactNode, useContext, useState } from \"react\";\n\ninterface CurrentUserType {\n    name: string;\n}\ninterface CurrentUserContextType {\n    currentUser: CurrentUserType | null;\n    setCurrentUser: React.Dispatch<\n        React.SetStateAction<CurrentUserType | null>\n    >;\n}\n\nconst CurrentUserContext = createContext<CurrentUserContextType | null>(null);\n\nexport default function UseContext4() {\n    const [currentUser, setCurrentUser] = useState<CurrentUserType | null>(\n        null\n    );\n\n    return (\n        <CurrentUserContext.Provider value={{ currentUser, setCurrentUser }}>\n            <Panel title=\"Welcome\">\n                <LoginButton />\n            </Panel>\n        </CurrentUserContext.Provider>\n    );\n}\n\ninterface PanelProps {\n    title: string;\n    children: ReactNode;\n}\nfunction Panel({ title, children }: PanelProps) {\n    return (\n        <section className=\"panel\">\n            <h3>{title}</h3>\n            {children}\n        </section>\n    );\n}\n\nfunction LoginButton() {\n    const contextValue = useContext(CurrentUserContext);\n    if (contextValue === null) {\n        throw new Error(\"CurrentUserContext not provided\");\n    }\n\n    const { currentUser, setCurrentUser } = contextValue;\n    if (currentUser !== null) {\n        return <p>You logged in as {currentUser.name}.</p>;\n    }\n\n    return (\n        <Button\n            onClick={() => {\n                setCurrentUser({ name: \"Advika\" });\n            }}\n        >\n            Log in as Advika\n        </Button>\n    );\n}\n\ninterface ButtonProps {\n    children: ReactNode;\n    onClick: () => void;\n}\n\nfunction Button({ children, onClick }: ButtonProps) {\n    return (\n        <button className=\"button\" onClick={onClick}>\n            {children}\n        </button>\n    );\n}\n","import \"../css/useContextPage.css\";\nimport UseConText0 from \"../contents/useContext/UseContext0\";\nimport UseConText1 from \"../contents/useContext/UseContext1\";\nimport UseConText2 from \"../contents/useContext/UseContext2\";\nimport UseConText3 from \"../contents/useContext/UseContext3\";\nimport UseConText4 from \"../contents/useContext/UseContext4\";\n\nexport default function useContextPage() {\n    return (\n        <section className=\"useContextPage\">\n            <h1>CreateContext, UseContext</h1>\n            <p>\n                <strong>\n                    전역적으로 사용되는 데이터를 하위 컴포넌트에 공유\n                </strong>\n            </p>\n\n            <code className=\"code-reference\">\n                const value = useContext(SomeContext)\n            </code>\n\n            <ul>\n                <li>props로 전달하지 않아 간결하다.</li>\n                <li>Context를 사용하면 컴포넌트를 재사용하기 어렵다.</li>\n                <li>\n                    Prop Drilling을 피하기 위한 목적이라면\n                    <strong style={{ textDecoration: \"underline\" }}>\n                        Component Composition(컴포넌트 합성) - 찾아볼것!\n                    </strong>\n                </li>\n                <li>\n                    useContext는 자주 변경되는 상태를 전역적으로 공유할 때\n                    리렌더링의 증가로 인해 성능 문제가 발생할 수 있다. 따라서\n                    성능에 민감한 경우에는 React.memo나 다른 최적화 기법을\n                    사용하여 불필요한 리렌더링을 방지해야 한다.\n                </li>\n                <li>\n                    useContext는 일반적으로 전역 상태 관리, 테마 설정, 언어 설정\n                    등과 같이 많은 컴포넌트에서 필요한 값을 효율적으로 전달하는\n                    데 사용\n                </li>\n            </ul>\n\n            <h2>0. Context 적용전 : Prop Drilling</h2>\n            <p>props로 자식에서 자식에게 전달</p>\n            <UseConText0 />\n\n            <h2>1. createContext, useContext</h2>\n            <ul>\n                <li>\n                    루트에서 createContext 후 Provider로 자식을 감싸주면 원하는\n                    자식 컴포넌트에서 useContext로 가져와서 적용한다.\n                </li>\n            </ul>\n\n            <UseConText1 />\n\n            <h2>2. </h2>\n            <p>string, {\"value={'예쁜 타이틀 컨텍스트'}\"}</p>\n            <UseConText2 />\n\n            <h2>3. Updating a value via context </h2>\n            <UseConText3 />\n\n            <h2>4. Updating an object via context</h2>\n            <UseConText4 />\n        </section>\n    );\n}\n"],"names":["UseConText1","_useState","useState","_useState2","_slicedToArray","isDark","setIsDark","_jsx","Page","_ref","_jsxs","className","children","Header","Content","Footer","_ref2","_ref3","_ref4","onClick","ThemeContext","createContext","Provider","value","themeContext","useContext","Error","TitleContext","UseConText2","titleContext","UseContext3","theme","setTheme","Form","type","checked","onChange","e","target","Panel","title","Button","CurrentUserContext","UseContext4","currentUser","setCurrentUser","LoginButton","contextValue","name","useContextPage","style","textDecoration","UseConText0","UseConText3","UseConText4"],"sourceRoot":""}